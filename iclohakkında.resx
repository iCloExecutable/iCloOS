<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ApPJ/wMVrle3MyR5xgAAAABJRU5ErkJggg==
</value>
  </data>
</root>